{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DeLL/Downloads/my-dev-portfolio/components/_ThreeSphere.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useRef, useEffect } from 'react'\r\nimport { Mesh } from 'three'\r\n\r\nexport function Sphere() {\r\n  const meshRef = useRef<Mesh>(null)\r\n\r\n  useEffect(() => {\r\n    function handleScroll() {\r\n      if (meshRef.current) {\r\n        const scrollY = window.scrollY\r\n        // Rotate sphere based on scroll position\r\n        meshRef.current.rotation.y = scrollY * 0.005\r\n        meshRef.current.rotation.x = scrollY * 0.0025\r\n        // Increase size based on scroll position (clamped)\r\n        const scale = 1 + Math.min(scrollY * 0.001, 1)\r\n        meshRef.current.scale.set(scale, scale, scale)\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', handleScroll)\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <mesh ref={meshRef}>\r\n      <sphereGeometry args={[1.5, 32, 32]} />\r\n      <meshStandardMaterial color=\"#4ade80\" wireframe />\r\n    </mesh>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAKO,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAQ;IAE7B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;4BAAE;YACR,SAAS;gBACP,IAAI,QAAQ,OAAO,EAAE;oBACnB,MAAM,UAAU,OAAO,OAAO;oBAC9B,yCAAyC;oBACzC,QAAQ,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,UAAU;oBACvC,QAAQ,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,UAAU;oBACvC,mDAAmD;oBACnD,MAAM,QAAQ,IAAI,KAAK,GAAG,CAAC,UAAU,OAAO;oBAC5C,QAAQ,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,OAAO;gBAC1C;YACF;YAEA,OAAO,gBAAgB,CAAC,UAAU;YAClC;oCAAO;oBACL,OAAO,mBAAmB,CAAC,UAAU;gBACvC;;QACF;2BAAG,EAAE;IAEL,qBACE,6LAAC;QAAK,KAAK;;0BACT,6LAAC;gBAAe,MAAM;oBAAC;oBAAK;oBAAI;iBAAG;;;;;;0BACnC,6LAAC;gBAAqB,OAAM;gBAAU,SAAS;;;;;;;;;;;;AAGrD;GA5BgB;KAAA","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DeLL/Downloads/my-dev-portfolio/components/Skills3D.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { Canvas } from '@react-three/fiber'\r\nimport { OrbitControls } from '@react-three/drei'\r\nimport { Sphere } from './_ThreeSphere'\r\n\r\nexport default function Skills3D() {\r\n  return (\r\n    <div className=\"fixed inset-0 -z-10\">\r\n      <Canvas camera={{ position: [0, 0, 3] }}>\r\n        <ambientLight />\r\n        <pointLight position={[10, 10, 10]} />\r\n        <Sphere />\r\n        <OrbitControls enableZoom={true} enableRotate={true} />\r\n      </Canvas>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,sMAAA,CAAA,SAAM;YAAC,QAAQ;gBAAE,UAAU;oBAAC;oBAAG;oBAAG;iBAAE;YAAC;;8BACpC,6LAAC;;;;;8BACD,6LAAC;oBAAW,UAAU;wBAAC;wBAAI;wBAAI;qBAAG;;;;;;8BAClC,6LAAC,8HAAA,CAAA,SAAM;;;;;8BACP,6LAAC,oKAAA,CAAA,gBAAa;oBAAC,YAAY;oBAAM,cAAc;;;;;;;;;;;;;;;;;AAIvD;KAXwB","debugId":null}}]
}