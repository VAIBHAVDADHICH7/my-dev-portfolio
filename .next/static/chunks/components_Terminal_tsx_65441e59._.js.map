{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/DeLL/Downloads/my-dev-portfolio/components/Terminal.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState } from 'react'\r\n\r\n// Define the type for the responses object\r\nconst responses: Record<'whoami' | 'projects' | 'blog' | 'contact' | 'skills', string> = {\r\n  whoami: 'I am a developer passionate about building web applications.',\r\n  projects: 'Check out my projects at /projects.',\r\n  blog: 'Read technical write-ups and tutorials at /blog.',\r\n  contact: 'Letâ€™s collaborate! See /contact.',\r\n  skills: 'Proficient in React, Next.js, Node.js, Three.js, TypeScript and more.'\r\n}\r\n\r\nexport default function Terminal() {\r\n  const [input, setInput] = useState('')\r\n  const [history, setHistory] = useState<string[]>([])\r\n\r\n  const handleCommand = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter') {\r\n      // Narrow the type of input to match the keys of responses\r\n      const command = input.toLowerCase() as keyof typeof responses\r\n      const response = responses[command] || 'Command not found.'\r\n      setHistory([...history, `$ ${input}`, response])\r\n      setInput('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-[#1e1e1e] text-green-400 font-mono p-6 rounded-lg shadow-xl max-w-2xl mx-auto w-full overflow-auto break-words\"\r\n      role=\"region\"\r\n      aria-label=\"Terminal command interface\"\r\n    >\r\n      {history.map((line, index) => (\r\n        <pre key={index} className=\"whitespace-pre-wrap break-words\">{line}</pre>\r\n      ))}\r\n      <div className=\"flex items-center\">\r\n        <label htmlFor=\"terminal-input\" className=\"sr-only\">\r\n          Terminal command input\r\n        </label>\r\n        <span className=\"mr-2\">$</span>\r\n        <input\r\n          id=\"terminal-input\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={handleCommand}\r\n          className=\"bg-transparent border-none outline-none w-full text-green-400\"\r\n          autoFocus\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAIA,2CAA2C;AAC3C,MAAM,YAAmF;IACvF,QAAQ;IACR,UAAU;IACV,MAAM;IACN,SAAS;IACT,QAAQ;AACV;AAEe,SAAS;;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAEnD,MAAM,gBAAgB,CAAC;QACrB,IAAI,EAAE,GAAG,KAAK,SAAS;YACrB,0DAA0D;YAC1D,MAAM,UAAU,MAAM,WAAW;YACjC,MAAM,WAAW,SAAS,CAAC,QAAQ,IAAI;YACvC,WAAW;mBAAI;gBAAS,CAAC,EAAE,EAAE,OAAO;gBAAE;aAAS;YAC/C,SAAS;QACX;IACF;IAEA,qBACE,6LAAC;QACC,WAAU;QACV,MAAK;QACL,cAAW;;YAEV,QAAQ,GAAG,CAAC,CAAC,MAAM,sBAClB,6LAAC;oBAAgB,WAAU;8BAAmC;mBAApD;;;;;0BAEZ,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAM,SAAQ;wBAAiB,WAAU;kCAAU;;;;;;kCAGpD,6LAAC;wBAAK,WAAU;kCAAO;;;;;;kCACvB,6LAAC;wBACC,IAAG;wBACH,OAAO;wBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;wBACxC,WAAW;wBACX,WAAU;wBACV,SAAS;;;;;;;;;;;;;;;;;;AAKnB;GAvCwB;KAAA","debugId":null}}]
}